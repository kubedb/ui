{{ $engines := dict }}
{{ $_ := set $engines "MicrosoftSQLServer" (dict "name" "mssql@dbgate-plugin-mssql") }}
{{ $_ := set $engines "MySQL" (dict "name" "mysql@dbgate-plugin-mysql") }}
{{ $_ := set $engines "MariaDB" (dict "name" "mariadb@dbgate-plugin-mysql") }}
{{ $_ := set $engines "Postgres" (dict "name" "postgres@dbgate-plugin-postgres") }}
{{ $_ := set $engines "MongoDB" (dict "name" "mongo@dbgate-plugin-mongo") }}
{{ $_ := set $engines "Redis" (dict "name" "redis@dbgate-plugin-redis") }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dbgate.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dbgate.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dbgate.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dbgate.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dbgate.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.authzproxy.enabled }}
        - name: authz-proxy
          securityContext:
            {{- toYaml .Values.authzproxy.securityContext | nindent 12 }}
          image: '{{ include "image.ghcr" (merge (dict "_repo" $.Values.authzproxy.repository) $) }}:{{ .Values.authzproxy.tag | default .Chart.AppVersion }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - run
            - --listen={{ .Values.authzproxy.params.listen }}
            - --metrics-addr={{ .Values.authzproxy.params.metricsAddr }}
            - --secret-name={{ .Values.app.authSecret.name }}
            - --secret-namespace={{ .Release.Namespace }}
            - --target-url=http://localhost:3000
            - --platform-url={{ .Values.authzproxy.params.platformURL }}
            {{- if .Values.authzproxy.params.platformCABundle }}
            - --platform-ca-file=/var/platform-auth/ca.crt
            {{- end }}
          ports:
            - name: proxy
              containerPort: {{ .Values.authzproxy.params.listen }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.authzproxy.params.metricsAddr }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.authzproxy.resources | nindent 12 }}
          {{- if .Values.authzproxy.params.platformCABundle }}
          volumeMounts:
            - mountPath: /var/platform-auth
              name: platform-auth
          {{- end }}
        {{ end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: '{{ include "image.dockerHub" (merge (dict "_repo" $.Values.image.repository) $) }}:{{ .Values.image.tag | default .Chart.AppVersion }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CONNECTIONS
              value: "PRIMARY"
            - name: ENGINE_PRIMARY
              value: {{ dig .Values.app.kind "name" "<missing>" $engines | quote }}
            - name: SERVER_PRIMARY
              value: "{{ .Values.app.service.name }}.{{ .Values.app.service.namespace }}.svc"
            - name: PORT_PRIMARY
              value: "5432"
            - name: LABEL_PRIMARY
              value: "{{ .Values.app.service.name }}"
            - name: USER_PRIMARY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.authSecret.name }}
                  key: username
          {{- if .Values.authzproxy.enabled }}
            - name: PASSWORD_PRIMARY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.authSecret.name }}
                  key: password
          {{- else }}
            - name: PASSWORD_MODE_PRIMARY
              value: askPassword
          {{- end }}
          {{- if .Values.app.tls.enabled }}
            - name: USE_SSL_PRIMARY
              value: "1"
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.authzproxy.params.platformCABundle }}
      volumes:
        - name: platform-auth
          secret:
            defaultMode: 420
            secretName: {{ include "dbgate.fullname" . }}-platform-auth
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
