replicaCount: 1

image:
  registry: docker.io
  repository: provectuslabs/kafka-ui
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

existingConfigMap: ""
yamlApplicationConfig:
  kafka:
    clusters:
      - name: yaml
        bootstrapServers: kafka-pods.demo.svc:9092
        properties:
          security.protocol: SASL_PLAINTEXT
          sasl.mechanism: PLAIN
          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="29)X_;IhcdbZR1ez";
  spring:
    security:
      oauth2:
  auth:
    type: disabled
  management:
    health:
      ldap:
        enabled: false

   

yamlApplicationConfigConfigMap:
  {}
  # keyName: config.yml
  # name: configMapName
existingSecret: ""
envs:
  secret: {}
  config: {}

networkPolicy:
  enabled: false
  egressRules:
    ## Additional custom egress rules
    ## e.g:
    ## customRules:
    ##   - to:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []
  ingressRules:
    ## Additional custom ingress rules
    ## e.g:
    ## customRules:
    ##   - from:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []

podAnnotations: {}
podLabels: {}

## Annotations to be added to kafka-ui Deployment
##
annotations: {}

## Set field schema as HTTPS for readines and liveness probe
##
probes:
  useHttpsScheme: false

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  # In case of service type LoadBalancer, you can specify reserved static IP
  # loadBalancerIP: 10.11.12.13
  # if you want to force a specific nodePort. Must be use with service.type=NodePort
  # nodePort:

resources:
  {}
  # limits:
  #   cpu: 200m
  #   memory: 512Mi
  # requests:
  #   cpu: 200m
  #   memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
- name: DYNAMIC_CONFIG_ENABLED
  value: "true"

initContainers: {}

volumeMounts: {}

volumes: {}

namespace:
  create: false

gateway:
  className: "ace"
  port: 8082
  # nodePort: 30080
  tlsSecretRef:
    name: service-gateway-presets-cert
    namespace: ace
  referenceGrant:
    create: true

# This is the namespace that the ingress should be installed
# into. It should be set to the same namespace as the
# KEDA HTTP componentry is installed in. Defaults to the Helm
# chart release namespace
keda:
  proxyService:
    namespace: "keda"
    name: "keda-add-ons-http-interceptor-proxy"
    port: 8080
targetPendingRequests: 200
autoscaling:
  http:
    minReplicas: 0
    maxReplicas: 1

# authSecret, Bind CR, HelmRelease CR in same namespace
# db could be in cross namespace
app:
  service:
    name: "kafkaui.kubedb.test"
    namespace: "demo"
  authSecret:
    name: "kafka-admin-cred"
bind:
  name: "kafka-bind"
  namespace: "demo"

authzproxy:
  enabled: false
  # KubeDB operator container image
  repository: appscode/kube-authz-proxy
  # KubeDB operator container image tag
  tag: "v0.0.1"
  # Security options this container should run with
  securityContext: # +doc-gen:break
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  # Compute Resources required by this container
  resources: {}
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  params:
    listen: 8000
    metricsAddr: 8080
    platformURL: ""
    platformCABundle: ""
