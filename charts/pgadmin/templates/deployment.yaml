apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pgadmin.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pgadmin.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pgadmin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pgadmin.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pgadmin.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: '{{ include "image.dockerHub" (merge (dict "_repo" $.Values.image.repository) $) }}:{{ .Values.image.tag | default .Chart.AppVersion }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PGADMIN_SERVER_MODE
              value: "True"
            - name: PGADMIN_DEFAULT_EMAIL
              value: "notused@example.com"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "notused"
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
            - name: PGADMIN_CONFIG_WTF_CSRF_SSL_STRICT
              value: "False"
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: "False"
            - name: PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT
              value: "False"
            - name: PGADMIN_CONFIG_WTF_CSRF_ENABLED
              value: "False"
            # avoid need for sudo
            # https://github.com/pgadmin-org/pgadmin4/blob/REL-8_9/pkg/docker/entrypoint.sh#L94
            # postfix is used to send password reset emails. This feature is not used.
            - name: PGADMIN_DISABLE_POSTFIX
              value: "True"
            - name: PGADMIN_LISTEN_PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            # https://mktgsite.enterprisedb.com/blog/how-deploy-pgadmin-kubernetes
            - name: config
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true
            - name: config
              mountPath: /pgadmin4/config_local.py
              subPath: config_local.py
              readOnly: true
            - name: datadir
              mountPath: /var/lib/pgadmin
            - name: logdir
              mountPath: /var/log/pgadmin
      volumes:
        - name: config
          secret:
            secretName: {{ include "pgadmin.serviceAccountName" . }}-config
        - name: datadir
          emptyDir: {}
        - name: logdir
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
